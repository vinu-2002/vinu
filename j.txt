
import java.io.IOException;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.conf.Configuration;



public class sales {
	public static void main(String args[])throws Exception{
		Configuration conf=new Configuration();
		Job job=new Job(conf,"sales");
		job.setJarByClass(sales.class);
		job.setMapperClass(smap.class);
		job.setReducerClass(sred.class);
		 job.setOutputKeyClass(Text.class);
		    job.setOutputValueClass(IntWritable.class);
		
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
		Path outputPath=new Path(args[1]);
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job,new Path(args[1]));
		outputPath.getFileSystem(conf).delete(outputPath,true);
		System.exit(job.waitForCompletion(true) ? 0:1);
		
	}
	public static class smap extends Mapper<LongWritable,Text,Text,IntWritable>{
		public void map(LongWritable key,Text value,Context context)throws IOException,InterruptedException{
			
			String line=value.toString();
			String [] element=line.split(",");
			Text tx=new Text(element[1]);
			int i=Integer.parseInt(element[3]);
			IntWritable it=new IntWritable(i);
			context.write(tx, it);
		}
	}
	public static class sred extends Reducer<Text,IntWritable,Text,IntWritable>{
		public void reduce(Text key,Iterable<IntWritable>values,Context context)throws IOException,InterruptedException{
			int sum=0;
			for(IntWritable x:values){
				sum+=x.get();
			}
			context.write(key, new IntWritable(sum));
		}
	}

}
